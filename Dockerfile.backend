# # Start from a Go base image
# FROM golang:1.17
# # Switch to the /src/ directory
# # (create it if necessary)
# WORKDIR /src/
# # Copy Go code in the image
# COPY . .
# # Build the executable
# RUN go build -o ./webapi ./cmd/webapi
# # Inform Docker that our server uses port 3000
# # Change this port with the one you used in the
# # http.Listen() call in the Go project.
# EXPOSE 3000
# # Inform Docker that we expect a volume on this
# # path (e.g., to save the database).
# VOLUME /data
# # Set the default program to our Go backend
# CMD ["/src/webapi"]


# Create a first temporary image named "builder"
FROM golang:1.17 AS builder
# Copy Go code (in "builder")
WORKDIR /src/
COPY . .
# Build executables (in "builder")
RUN go build -o /app/webapi ./cmd/webapi

# Create final container
FROM debian:bookworm
# Inform Docker about which port is used
EXPOSE 3000
# Copy the executable from the "builder" image
WORKDIR /app/
COPY --from=builder /app/webapi ./
# Set the default program to our Go backend
CMD ["/app/webapi"]



